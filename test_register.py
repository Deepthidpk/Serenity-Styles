# Generated by Selenium IDE
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class TestRegister:
    def setup_method(self, method):
        """Setup WebDriver before each test"""
        options = webdriver.ChromeOptions()
        options.add_argument("--ignore-certificate-errors")  # Ignore SSL issues
        self.driver = webdriver.Chrome(options=options)
        self.driver.implicitly_wait(10)  # Apply implicit wait
        self.vars = {}

    def teardown_method(self, method):
        """Quit the WebDriver after each test"""
        self.driver.quit()

    def test_register(self):
        """Test user registration and OTP verification"""
        self.driver.get("http://localhost/coffeeduplicate/index.php")
        self.driver.set_window_size(1296, 688)

        # Click Register Button
        register_button = WebDriverWait(self.driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".nav-item:nth-child(7) span:nth-child(2)"))
        )
        register_button.click()

        # Fill Registration Form
        self.fill_input("name", "Aparna")
        self.fill_input("email", "aparnaprasad2027@mca.ajce.in")
        self.fill_input("phone_no", "8590918598")
        self.fill_input("pass", "Aparna@222")
        self.fill_input("conpass", "Aparna@222")

        # Click Submit
        self.click_button(".btn")

        # Handle Success Alert
        self.click_alert()

        # OTP Verification
        self.fill_input("email", "aparnaprasad2027@mca.ajce.in")
        self.fill_input("otp", "325130")
        self.click_button(".btn")
        self.click_alert()

        print("âœ… Registration and OTP test passed successfully!")

    def fill_input(self, name, value):
        """Helper function to input text into a field"""
        field = WebDriverWait(self.driver, 10).until(
            EC.visibility_of_element_located((By.NAME, name))
        )
        self.driver.execute_script("arguments[0].scrollIntoView();", field)  # Ensure visibility
        field.clear()  # Clear any pre-filled values
        field.send_keys(value)

    def click_button(self, selector):
        """Helper function to click a button"""
        button = WebDriverWait(self.driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, selector))
        )
        self.driver.execute_script("arguments[0].scrollIntoView();", button)  # Ensure visibility
        button.click()

    def click_alert(self):
        """Helper function to handle Swal2 confirmation alerts"""
        try:
            alert = WebDriverWait(self.driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, ".swal2-confirm"))
            )
            alert.click()
        except Exception as e:
            self.driver.save_screenshot("alert_not_found.png")  # Capture screenshot if alert fails
            pytest.fail(f"Failed to click confirmation alert: {e}")
